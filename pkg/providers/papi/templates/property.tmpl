terraform {
  required_providers {
    akamai = {
      source  = "akamai/akamai"
      version = ">= 2.0.0"
    }
  }
  required_version = ">= 0.13"
}

provider "akamai" {
  edgerc = var.edgerc_path
  config_section = var.config_section
}

data "akamai_group" "group" {
  group_name = "{{.Property.GroupName}}"
  contract_id = "{{.Property.ContractID}}"
}

data "akamai_contract" "contract" {
  group_name = data.akamai_group.group.group_name
}
{{- if not .RulesAsSchema}}

data "akamai_property_rules_template" "rules" {
  template_file = abspath("${path.module}/property-snippets/main.json")
}{{end}}
{{range .Property.EdgeHostnames}}
resource "akamai_edge_hostname" "{{.EdgeHostnameResourceName}}" {
  product_id  = "prd_{{.ProductName}}"
  contract_id = data.akamai_contract.contract.id
  group_id = data.akamai_group.group.id
  ip_behavior = "{{.IPv6}}"
  edge_hostname = "{{.EdgeHostname}}"
{{- if .SlotNumber}}
  certificate = {{.SlotNumber}}
{{- end}}
{{- if .UseCases}}
  use_cases = jsonencode({{.UseCases}})
{{- end}}
}
{{end}}
resource "akamai_property" "{{.Property.PropertyResourceName}}" {
  name = "{{.Property.PropertyName}}"
  contract_id = data.akamai_contract.contract.id
  group_id = data.akamai_group.group.id
  product_id = "prd_{{.Property.ProductName}}"
  rule_format = "{{.Property.RuleFormat}}"
{{- range .Property.Hostnames}}
  hostnames {
    cname_from = "{{.Hostname}}"
    cname_to = akamai_edge_hostname.{{.EdgeHostnameResourceName}}.edge_hostname
    cert_provisioning_type = "{{.CertProvisioningType}}"
  }
{{- end}}
{{- if .RulesAsSchema}}
  rules = data.akamai_property_rules_builder.{{(index .Rules 0).TerraformName}}.json
{{- else}}
  rules = data.akamai_property_rules_template.rules.json
{{- end}}
}

{{- if .Property.HasStagingActivation}}

resource "akamai_property_activation" "{{.Property.PropertyResourceName}}" {
  property_id = akamai_property.{{.Property.PropertyResourceName}}.id
  contact = [{{range $index, $element := .Property.Emails}}{{if $index}}, {{end}}"{{$element}}"{{end}}]
  version = akamai_property.{{.Property.PropertyResourceName}}.latest_version
  network = upper(var.env)
{{- if .Property.ActivationNote}}
  note = "{{.Property.ActivationNote}}"
{{- end}}
}
{{ else}}

#resource "akamai_property_activation" "{{.Property.PropertyResourceName}}" {
#  property_id = akamai_property.{{.Property.PropertyResourceName}}.id
#  contact = [{{range $index, $element := .Property.Emails}}{{if $index}}, {{end}}"{{$element}}"{{end}}]
#  version = akamai_property.{{.Property.PropertyResourceName}}.latest_version
#  network = upper(var.env)
{{- if .Property.ActivationNote}}
#  note = "{{.Property.ActivationNote}}"
{{- end}}
#}
{{ end}}